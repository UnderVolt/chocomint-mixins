group 'io.undervolt'
version '0.0.1-alpha'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = "UTF-8"
}

minecraft {
    version = '1.8.9'
    mappings = 'stable_22'
    tweakClass = 'io.undervolt.launch.ChocomintTweaker'
    runDir = 'run'
    clientJvmArgs = ["-XX:-DisableExplicitGC"]
    makeObfSourceJar = false
}

repositories {
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    mavenCentral()
    jcenter()
}

configurations {
    extraLibs
}

dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    testImplementation 'junit:junit:4.12'
    embed('io.socket:socket.io-client:1.0.0')
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, 'mixins.chocomint.refmap.json'
}

processResources {
    inputs.files "src/main/resources"
    outputs.dir "build/classes/main"
    copy {
        from("src/main/resources")
        into("build/classes/main")
    }
}

javadoc {
    options.addStringOption('Xwerror', '-quiet') // makes the build fail on travis when there is a javadoc error
    options.linkSource true
    options.encoding "UTF-8" // allow emoji in comments :^)
    source = sourceSets.api.allJava
    classpath += sourceSets.api.compileClasspath
}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

jar {
    manifest {
        attributes(
            'MixinConfigs': 'mixins.chocomint.json',
            'TweakClass': 'io.undervolt.launch.ChocomintTweaker',
            'TweakOrder': 0,
            'Implementation-Title': 'Chocomint',
            'Implementation-Version': version
        )
    }
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
            exclude 'org/jetbrains/annotations', 'org/jetbrains/annotations/**'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.3'
}