group 'io.undervolt'
version '0.0.1-alpha'

buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'http://repo.spongepowered.org/maven'
        }
        jcenter()
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = "UTF-8" // allow emoji in comments :^)
}

sourceSets {
    launch {
        compileClasspath += main.compileClasspath + main.runtimeClasspath + main.output
    }
}

minecraft {
    version = '1.12.2'
    mappings = 'stable_39'
    tweakClass = 'io.undervolt.launch.ChocomintTweaker'
    runDir = 'run'

    // The sources jar should use SRG names not MCP to ensure compatibility with all mappings
    makeObfSourceJar = true
}

repositories {
    mavenCentral()

    maven {
        name = 'spongepowered-repo'
        url = 'http://repo.spongepowered.org/maven/'
    }

    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
}

dependencies {
    runtime launchImplementation('com.github.ImpactDevelopment:SimpleTweaker:1.2')
    runtime launchImplementation('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
    testImplementation 'junit:junit:4.12'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.launch, 'mixins.chocomint.refmap.json'
}

javadoc {
    options.addStringOption('Xwerror', '-quiet') // makes the build fail on travis when there is a javadoc error
    options.linkSource true
    options.encoding "UTF-8" // allow emoji in comments :^)
    source = sourceSets.api.allJava
    classpath += sourceSets.api.compileClasspath
}

jar {
    from sourceSets.launch.output, sourceSets.api.output

    if (!getProject().hasProperty("baritone.forge_build")) {
        exclude "**/BaritoneForgeModXD.class"
        exclude "**/mods.toml"
    }

    preserveFileTimestamps = false
    reproducibleFileOrder = true

    manifest {
        attributes(
                'MixinConfigs': 'mixins.chocomint.json',

                'Implementation-Title': 'Chocomint',
                'Implementation-Version': version
        )
    }
}

//task proguard(type: ProguardTask) {
//    url 'https://downloads.sourceforge.net/project/proguard/proguard/6.0/proguard6.0.3.zip'
//    extract 'proguard6.0.3/lib/proguard.jar'
//}
//
//task createDist(type: CreateDistTask, dependsOn: proguard)

//build.finalizedBy(createDist)